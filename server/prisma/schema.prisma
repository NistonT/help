// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Category {
  id        Int      @id @default(autoincrement())
  CreatedAt DateTime @default(now()) @map("created_at")
  UpdatedAt DateTime @updatedAt() @map("updated_at")

  name String
  Task Task[]

  @@map("category")
}

model Department {
  id        Int      @id @default(autoincrement())
  CreatedAt DateTime @default(now()) @map("created_at")
  UpdatedAt DateTime @updatedAt() @map("updated_at")

  code String
  name String
  User User[]

  @@map("department")
}

model Status {
  id        Int      @id @default(autoincrement())
  CreatedAt DateTime @default(now()) @map("created_at")
  UpdatedAt DateTime @updatedAt() @map("updated_at")

  code String
  name String
  Task Task[]

  @@map("status")
}

model Task {
  id        Int      @id @default(autoincrement())
  CreatedAt DateTime @default(now()) @map("created_at")
  UpdatedAt DateTime @updatedAt() @map("updated_at")

  user   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int      @map("category_id")

  status   Status @relation(fields: [statusId], references: [id])
  statusId Int    @map("status_id")

  description String

  @@map("task")
}

model Support {
  id        Int      @id @default(autoincrement())
  CreatedAt DateTime @default(now()) @map("created_at")
  UpdatedAt DateTime @updatedAt() @map("updated_at")

  user   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")

  title   String
  message String
  admin   String?

  @@map("support")
}

model Role {
  id        Int      @id @default(autoincrement())
  CreatedAt DateTime @default(now()) @map("created_at")
  UpdatedAt DateTime @updatedAt() @map("updated_at")

  code String
  name String
  User User[]

  @@map("role")
}

model User {
  id       Int    @id @default(autoincrement())
  login    String @unique
  name     String
  number   String @unique
  email    String @unique
  password String

  CreatedAt DateTime @default(now()) @map("created_at")
  UpdatedAt DateTime @updatedAt @map("updated_at")

  role   Role @relation(fields: [roleId], references: [id])
  roleId Int  @default(1)

  department   Department? @relation(fields: [departmentId], references: [id])
  departmentId Int?

  Support Support[]
  Task    Task[]

  @@map("user")
}
